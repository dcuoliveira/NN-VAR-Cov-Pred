Var2=x,
beta_2x2=1)
}
else{
fit_lm = lm(as.formula(paste0(y, "~" , x, "-1")), data = simulation_dgp)
tmp_data = list(Var1=gsub(y, "V", "")
Var2=gsub(x, "V", ""),
beta_2x2=fit_lm$coefficients[[1]])
}
beta2x2_dgp[[counter]] = tmp_data
counter = counter + 1
}
}
beta2x2_dgp = list()
counter = 1
for (y in colnames(simulation_dgp)){
for (x in colnames(simulation_dgp)){
if (y == x){
tmp_data = list(Var1=y,
Var2=x,
beta_2x2=1)
}
else{
fit_lm = lm(as.formula(paste0(y, "~" , x, "-1")), data = simulation_dgp)
tmp_data = list(Var1=gsub(y, "V", "") ,
Var2=gsub(x, "V", ""),
beta_2x2=fit_lm$coefficients[[1]])
}
beta2x2_dgp[[counter]] = tmp_data
counter = counter + 1
}
}
beta2x2_dgp = do.call("rbind", beta2x2_dgp)
View(beta2x2_dgp)
y
gsub(y, "V", "")
gsub(y, "^V$", "")
tmp_data = list(Var1=gsub(y, "^V$", "") ,
Var2=gsub(x, "V", ""),
beta_2x2=fit_lm$coefficients[[1]])
y
gsub(y, "V", "", fixed = True)
gsub(y, "V", "", fixed = T)
y
sub(y, "V", "")
y
gsub(y, "V", "")
gsub(y, "V", "1")
library("stringr")
str_replace(y, "V", "1")
str_replace(y, "V", "")
beta2x2_dgp = list()
counter = 1
for (y in colnames(simulation_dgp)){
for (x in colnames(simulation_dgp)){
if (y == x){
tmp_data = list(Var1=y,
Var2=x,
beta_2x2=1)
}
else{
fit_lm = lm(as.formula(paste0(y, "~" , x, "-1")), data = simulation_dgp)
tmp_data = list(Var1=str_replace(y, "V", ""),
Var2=str_replace(y, "V", ""),
beta_2x2=fit_lm$coefficients[[1]])
}
beta2x2_dgp[[counter]] = tmp_data
counter = counter + 1
}
}
beta2x2_dgp = do.call("rbind", beta2x2_dgp)
View(beta2x2_dgp)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
View(beta2x2_data)
y_dgp
beta2x2_data
betadgp_beta2x2_data = merge(y_dgp, beta2x2_data)
y_dgp
beta2x2_data
beta2x2
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
beta2x2_data
beta2x2_data$Var1
beta2x2_data$Var1 = unlist(beta2x2_data$Var1)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
apply(beta2x2_data, 2, unlist) %>% as.data.table()
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
betadgp_beta2x2_data = merge(y_dgp, beta2x2_data)
beta2x2_data$Var1
y_dgp$Var1
beta2x2
View(beta2x2_data)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
beta2x2_data
betadgp_beta2x2_data = merge(y_dgp, beta2x2_data)
betadgp_beta2x2_data
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
View(beta2x2_data)
View(betadgp_beta2x2_data)
beta2x2_data
beta2x2_data
simulation_dgp
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
betadgp_beta2x2_data = merge(y_dgp, beta2x2_data)
betadgp_beta2x2_data
betadgp_covdgp_data
View(betadgp_covdgp_data)
View(betadgp_covdgp_data)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
mts$data1
sigma
betadgp_covdgp_data
betadgp_covdgp_data$betas_dgp
betadgp_covdgp_data_test
fwrite(x = betadgp_covdgp_data_test,
file = here(new_folder, "betadgp_covdgp_data_test.csv"),
row.names = FALSE)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
betadgp_data_test
betadgp_covdgp_data_test
betadgp_beta2x2_data_test
betadgp_beta2x2_data_test
betadgp_data_test = merge(betadgp_covdgp_data_test %>% select(Var1, Var2, cov_dgp),
betadgp_beta2x2_data_test %>% select(Var1, Var2, beta_2x2))
betadgp_data_test = merge(betadgp_covdgp_data_test %>% select(Var1, Var2, cov_dgp),
betadgp_beta2x2_data_test %>% select(Var1, Var2, beta_2x2))
betadgp_data_test
betadgp_covdgp_data_test
betadgp_data_test = merge(betadgp_covdgp_data_test,
betadgp_beta2x2_data_test %>% select(Var1, Var2, beta_2x2))
betadgp_data_test
View(betadgp_data_test)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
betadgp_covdgp_data
beta2x2_data
betadgp_covdgp_data
betadgp_data = merge(betadgp_covdgp_data, beta2x2_data)
betadgp_data
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
rm(list=ls())
gc()
library('SparseTSCGM')
library('dplyr')
library("data.table")
FILE_PATH = getwd()
source(file.path(FILE_PATH, "src", "utils", "Rutils.R"))
OUTPUT_PATH = file.path(FILE_PATH, "src", "data", "inputs")
MODELS = c("ar1")
N = 100
K_INIT = 150
K = 500
J = 1
SEED = 02021994
PROB_OF_CONNECTION = 0.1
NETWORKS = c("random")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
rm(list=ls())
gc()
library('SparseTSCGM')
library('dplyr')
library("data.table")
library("foreach")
library("doParallel")
cores = detectCores()
rm(list=ls())
gc()
library('SparseTSCGM')
library('dplyr')
library("data.table")
library("foreach")
library("doParallel")
FILE_PATH = getwd()
source(file.path(FILE_PATH, "src", "utils", "Rutils.R"))
OUTPUT_PATH = file.path(FILE_PATH, "src", "data", "inputs")
MODELS = c("ar1")
N = 100
K_INIT = 150
K = 500
J = 1
SEED = 02021994
PROB_OF_CONNECTION = 0.1
NETWORKS = c("random")
cores = detectCores()
library("foreach")
library("doParallel")
install.packages("foreach")
install.packages("doParallel")
rm(list=ls())
gc()
library('SparseTSCGM')
library('dplyr')
library("data.table")
library("foreach")
library("doParallel")
FILE_PATH = getwd()
source(file.path(FILE_PATH, "src", "utils", "Rutils.R"))
OUTPUT_PATH = file.path(FILE_PATH, "src", "data", "inputs")
MODELS = c("ar1")
N = 100
K_INIT = 150
K = 500
J = 1
SEED = 02021994
PROB_OF_CONNECTION = 0.1
NETWORKS = c("random")
cores = detectCores()
cores
cl <- makeCluster(cores[1]-1) #not to overload your computer
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
?str_replace
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
library("BigVAR")
library("BigVAR")
?constructModel
getwd()
source(file.path(getwd(), "src", "models", "penalized_var.R"))
library("dplyr")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
file.path(outputs_path, model_tag, dir_name, d_name + "_model.Rds")
file.path(outputs_path, model_tag, dir_name, paste0(d_name + "_model.Rds"))
file.path(outputs_path, model_tag, dir_name, paste0(d_name, "_model.Rds"))
check_rds <- file.exists(file.path(outputs_path, model_tag, dir_name, paste0(d_name, "_model.Rds")))
check_rds
check_pred <- file.path(outputs_path, model_tag, dir_name, d_name + "_result.csv")
check_pred <- file.path(outputs_path, model_tag, dir_name, paste0(d_name + "_result.csv"))
check_pred <- file.path(outputs_path, model_tag, dir_name, paste0(d_name, "_result.csv"))
check_pred
isTRUE(check_pickle) & isTRUE(check_pred)
isTRUE(check_rds) & isTRUE(check_pred)
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/models/penalized_var.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
# load train data
train_data <- read.csv(file = file.path(inputs_path, dir_name, d_name + ".csv"))
# load train data
train_data <- read.csv(file = file.path(inputs_path, paste0(dir_name, d_name + ".csv")))
# load train data
train_data <- read.csv(file = file.path(inputs_path, dir_name, paste0(d_name,".csv")))
head(train_data)
y_train <- train_data %>% select(target_name)
y_train <- train_data %>% select(sym(target_name))
y_train
X_train <- train_data %>% select(-sym(target_name))
X_train
# load train data
train_data <- read.csv(file = file.path(inputs_path, dir_name, paste0(d_name,".csv"))) %>% select(-Var1, -Var2)
y_train <- train_data %>% select(sym(target_name))
X_train <- train_data %>% select(-sym(target_name))
file.path(inputs_path, dir_name, paste0(d_name,".csv"))
d_name
dataset_names
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
d_name
# load train data
train_data <- read.csv(file = file.path(inputs_path, dir_name, paste0(d_name,".csv")))
head(train_data)
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
rm(list=ls())
library("data.table")
library("dplyr")
FILE_PATH = getwd()
source(file.path(FILE_PATH, "src", "utils", "Rutils.R"))
OUTPUT_PATH = file.path(FILE_PATH, "src", "data", "inputs")
MODELS = c("ar1")
N = 100
K_INIT = 150
K = 500
J = 1
SEED = 02021994
PROB_OF_CONNECTION = 0.1
NETWORKS = c("random")
k=K_INIT
k
network = "random"
output_name = paste0(model, "_", k, "_", network)
model=MODELS
model
output_name = paste0(model, "_", k, "_", network)
new_folder = file.path(OUTPUT_PATH, output_name)
new_folder
data <- fread(new_folder)
data <- fread(file = file.path(new_folder, "data_dgp_test.csv"))
file.path(new_folder, "data_dgp_test.csv")
data <- fread(file = file.path(new_folder, "data_dgp_test.csv"))
?fread
data <- read.csv(file = file.path(new_folder, "data_dgp_test.csv"))
data <- fread(file = file.path(new_folder, "test_data_dgp.csv"))
head(data)
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/fix_file_names.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/fix_file_names.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
library("data.table")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
head(train_data)
ts.plot(train_data)
ts.plot(train_data[10:,])
ts.plot(train_data[10:150,])
ts.plot(train_data[5:150,])
ts.plot(train_data[2:150,])
# load test data
test_data <- fread(file = file.path(inputs_path, dir_name, paste0(d_name + "_test.csv")))
# load test data
test_data <- fread(file = file.path(inputs_path, dir_name, paste0(d_name , "_test.csv")))
test_data <- test_data[2:sim(test_data)[1], ]
test_data <- test_data[2:dim(test_data)[1], ]
test_data
ts.plot(test_data[2:150,])
colMeans(train_data)
std <- apply(train_data, 2, sd)
std
mean <- apply(train_data, 2, mean)
std <- apply(train_data, 2, sd)
train_data_zscore <- list()
for (colname in colnames(train_data)){
train_data_zscore[[colname]] <- (train_data[[colname]] - mean[colname]) / std[colname]
}
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
train_data[[colname]]
mean[colname]
mean[[colname]]
(train_data[[colname]] - mean[[colname]]) / std[[colname]]
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
head(train_data)
model
model_tag
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/models/penalized_var.R")
wrapper$data <- train_data
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/training/Runners.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
wrapper
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
wrapper
wrapper()
wrapper(data)
wrapper(data=train_data)
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/models/penalized_var.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/models/penalized_var.R")
source("~/Documents/Daniel/codes/nn-var-cov-pred/src/run_var_elasticnet.R")
wrapper
wrapper$data <- train_data
wrapper$struct
wrapper$cv <- CV_TYPE
CV_TYPE
wrapper$verbose <- FALSE
verbose
wrapper$verbose <- verbose
wrapper$verbose
model_search <- constructModel(Y = wrapper$data,
p = wrapper$p,
struct = wrapper$struct,
gran = wrapper$gran,
h = wrapper$h,
cv = wrapper$cv,
verbose = wrapper$verbose,
IC = wrapper$IC,
model.controls=wrapper$model.controls)
wrapper$data
model_search <- constructModel(Y = wrapper$data,
p = wrapper$p,
struct = wrapper$struct,
gran = wrapper$gran,
h = wrapper$h,
cv = wrapper$cv,
verbose = wrapper$verbose,
IC = wrapper$IC,
model.controls=wrapper$model.controls)
model_search <- constructModel(Y = wrapper$data %>% as.matrix(),
p = wrapper$p,
struct = wrapper$struct,
gran = wrapper$gran,
h = wrapper$h,
cv = wrapper$cv,
verbose = wrapper$verbose,
IC = wrapper$IC,
model.controls=wrapper$model.controls)
results_model_search <- cv.BigVAR(model_search)
opt_lambda <- results_model_search@OptimalLambda
opt_lambda
