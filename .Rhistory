var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
var_data$ar1_100_random
betas = var_data$ar1_100_random$gamma
betas
melt(betas)
library("reshape2")
library("reshape")
install.packages("reshape2")
library("reshape2")
melt(betas)
View(betas)
y = melt(betas)
View(y)
var_data$ar1_100_random$data1
X = var_data$ar1_100_random$data1
View(X)
head(X)
tail(X)
typeof(X)
as.data.frame(X)
library("data.table")
install.packages("data.table")
library("data.table")
as.data.table(X)
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y = melt(betas)
y = melt(betas_dgp)
X = var_data$ar1_100_random$data1
dim(X)
cov_dgp = var_data$ar1_100_random$sigma
View(cov_dgp)
melt(cov_dgp)
cov_dgp = melt(var_data$ar1_100_random$sigma)
View(cov_dgp)
head(y_dgp)
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp)
cov_dgp = melt(var_data$ar1_100_random$sigma)
head(y_dgp)
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(value=betas_dgp)
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
y_dgp
cov_dgp
cov_dgp = melt(var_data$ar1_100_random$sigma) %>% as.data.table() %>% rename(cov_dgp=value)
cov_dgp
data_dgp = merge(y_dgp, cov_dgp)
View(data_dgp)
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1
colnames(simulation_dgp)
as.data.frame(simulation_dgp)
as.data.frame(simulation_dgp[[1]])
as.data.frame(simulation_dgp[1,])
simulation_dgp = var_data$ar1_100_random$data1
dim(simulation_dgp)
View(y_dgp)
simulation_dgp[,1]
data_out = list()
for (i in 1:dim(simulation_dgp)[1]){
data_out[[str(i)]] = simulation_dgp[,i]
}
for (i in 1:dim(simulation_dgp)[1]){
data_out[[str(i)]] = simulation_dgp[,i]
}
data_out = list()
for (i in 1:dim(simulation_dgp)[1]){
data_out[[str(i)]] = simulation_dgp[,i]
}
data_out = list()
for (i in 1:dim(simulation_dgp)[1]){
data_out[[i]] = simulation_dgp[,i]
}
data_out = do.call("cbind", data_out)
data_out
data_out = list()
for (i in 1:dim(simulation_dgp)[1]){
data_out[[i]] = simulation_dgp[,i]
}
data_out = do.call("cbind", data_out) %>% as.data.table()
View(data_out)
dim(simulation_dgp)[1]
i
colnames(data_out)
data_out = list()
for (i in 1:dim(simulation_dgp)[1]){
data_out[[i]] = simulation_dgp[,i]
}
data_out = do.call("cbind", data_out) %>% as.data.table()
names(data_out) = gsub(x=names(data_out),
pattern="V",
replacement="")
View(data_out)
source("~/.active-rstudio-document")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
source(here("src", "utils.R"))
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
simulation_dgp
i=1
j=2
lm(1 ~ 2, data=simulation_dgp)
lm("1" ~ "2", data=simulation_dgp)
y = colnames(simulation_dgp)[1]
y
x = colnames(simulation_dgp)[2]
x
as.formula(paste0(y, x, collapse = "~"))
as.formula(paste0(y, "~" , x))
lm(as.formula(paste0(y, "~" , x)), data = simulation_dgp)
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
y = colnames(simulation_dgp)[1]
y
x = colnames(simulation_dgp)[2]
y
x
lm(as.formula(paste0(y, "~" , x)), data = simulation_dgp)
fit_lm = lm(as.formula(paste0(y, "~" , x)), data = simulation_dgp)
fit_lm
fit_lm$coefficients
fit_lm = lm(as.formula(paste0(y, "~" , x, "-1")), data = simulation_dgp)
fit_lm$coefficients
fit_lm$coefficients[1]
fit_lm$coefficients[[1]]
View(y_dgp)
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_dgp = list()
counter = 1
for (y in colnames(simulation_dgp)){
for (x in colnames(simulation_dgp)){
if (i == j){
next
}
else{
fit_lm = lm(as.formula(paste0(y, "~" , x, "-1")), data = simulation_dgp)
tmp_data = list(Var1=y,
Var2=x,
beta_2x2=fit_lm$coefficients[[1]])
beta2x2_dgp[[counter]] = tmp_data
}
}
}
beta2x2_dgp = list()
counter = 1
for (y in colnames(simulation_dgp)){
for (x in colnames(simulation_dgp)){
if (y == x){
next
}
else{
fit_lm = lm(as.formula(paste0(y, "~" , x, "-1")), data = simulation_dgp)
tmp_data = list(Var1=y,
Var2=x,
beta_2x2=fit_lm$coefficients[[1]])
beta2x2_dgp[[counter]] = tmp_data
}
}
}
beta2x2_dgp = do.call("rbind", beta2x2_dgp)
View(beta2x2_dgp)
beta2x2_dgp = list()
counter = 1
for (y in colnames(simulation_dgp)){
for (x in colnames(simulation_dgp)){
if (y == x){
tmp_data = list(Var1=y,
Var2=x,
beta_2x2=1)
}
else{
fit_lm = lm(as.formula(paste0(y, "~" , x, "-1")), data = simulation_dgp)
tmp_data = list(Var1=y,
Var2=x,
beta_2x2=fit_lm$coefficients[[1]])
beta2x2_dgp[[counter]] = tmp_data
}
counter = counter + 1
}
}
beta2x2_dgp = do.call("rbind", beta2x2_dgp)
View(beta2x2_dgp)
beta2x2_dgp = list()
counter = 1
for (y in colnames(simulation_dgp)){
for (x in colnames(simulation_dgp)){
if (y == x){
tmp_data = list(Var1=y,
Var2=x,
beta_2x2=1)
}
else{
fit_lm = lm(as.formula(paste0(y, "~" , x, "-1")), data = simulation_dgp)
tmp_data = list(Var1=y,
Var2=x,
beta_2x2=fit_lm$coefficients[[1]])
}
beta2x2_dgp[[counter]] = tmp_data
counter = counter + 1
}
}
beta2x2_dgp = do.call("rbind", beta2x2_dgp)
View(beta2x2_dgp)
?gsub
beta2x2_dgp = list()
counter = 1
for (y in colnames(simulation_dgp)){
for (x in colnames(simulation_dgp)){
if (y == x){
tmp_data = list(Var1=y,
Var2=x,
beta_2x2=1)
}
else{
fit_lm = lm(as.formula(paste0(y, "~" , x, "-1")), data = simulation_dgp)
tmp_data = list(Var1=gsub(y, "V", "")
Var2=gsub(x, "V", ""),
beta_2x2=fit_lm$coefficients[[1]])
}
beta2x2_dgp[[counter]] = tmp_data
counter = counter + 1
}
}
beta2x2_dgp = list()
counter = 1
for (y in colnames(simulation_dgp)){
for (x in colnames(simulation_dgp)){
if (y == x){
tmp_data = list(Var1=y,
Var2=x,
beta_2x2=1)
}
else{
fit_lm = lm(as.formula(paste0(y, "~" , x, "-1")), data = simulation_dgp)
tmp_data = list(Var1=gsub(y, "V", "") ,
Var2=gsub(x, "V", ""),
beta_2x2=fit_lm$coefficients[[1]])
}
beta2x2_dgp[[counter]] = tmp_data
counter = counter + 1
}
}
beta2x2_dgp = do.call("rbind", beta2x2_dgp)
View(beta2x2_dgp)
y
gsub(y, "V", "")
gsub(y, "^V$", "")
tmp_data = list(Var1=gsub(y, "^V$", "") ,
Var2=gsub(x, "V", ""),
beta_2x2=fit_lm$coefficients[[1]])
y
gsub(y, "V", "", fixed = True)
gsub(y, "V", "", fixed = T)
y
sub(y, "V", "")
y
gsub(y, "V", "")
gsub(y, "V", "1")
library("stringr")
str_replace(y, "V", "1")
str_replace(y, "V", "")
beta2x2_dgp = list()
counter = 1
for (y in colnames(simulation_dgp)){
for (x in colnames(simulation_dgp)){
if (y == x){
tmp_data = list(Var1=y,
Var2=x,
beta_2x2=1)
}
else{
fit_lm = lm(as.formula(paste0(y, "~" , x, "-1")), data = simulation_dgp)
tmp_data = list(Var1=str_replace(y, "V", ""),
Var2=str_replace(y, "V", ""),
beta_2x2=fit_lm$coefficients[[1]])
}
beta2x2_dgp[[counter]] = tmp_data
counter = counter + 1
}
}
beta2x2_dgp = do.call("rbind", beta2x2_dgp)
View(beta2x2_dgp)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
View(beta2x2_data)
y_dgp
beta2x2_data
betadgp_beta2x2_data = merge(y_dgp, beta2x2_data)
y_dgp
beta2x2_data
beta2x2
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
beta2x2_data
beta2x2_data$Var1
beta2x2_data$Var1 = unlist(beta2x2_data$Var1)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
apply(beta2x2_data, 2, unlist) %>% as.data.table()
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
betadgp_beta2x2_data = merge(y_dgp, beta2x2_data)
beta2x2_data$Var1
y_dgp$Var1
beta2x2
View(beta2x2_data)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/utils.R")
rm(list=ls())
gc()
library('dplyr')
library("here")
library("reshape2")
library("stringr")
source(here("src", "utils.R"))
INPUT_PATH = here("src", "data", "inputs")
var_data = readRDS(here(INPUT_PATH, "VAR-DGPs.rds"))
betas_dgp = var_data$ar1_100_random$gamma
y_dgp = melt(betas_dgp) %>% as.data.table() %>% rename(betas_dgp=value)
simulation_dgp = var_data$ar1_100_random$data1 %>% longitudinal_to_data.table()
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
beta2x2_data
betadgp_beta2x2_data = merge(y_dgp, beta2x2_data)
betadgp_beta2x2_data
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
View(beta2x2_data)
View(betadgp_beta2x2_data)
beta2x2_data
beta2x2_data
simulation_dgp
beta2x2_data = lm_combination_2x2(data=simulation_dgp)
betadgp_beta2x2_data = merge(y_dgp, beta2x2_data)
betadgp_beta2x2_data
betadgp_covdgp_data
View(betadgp_covdgp_data)
View(betadgp_covdgp_data)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
mts$data1
sigma
betadgp_covdgp_data
betadgp_covdgp_data$betas_dgp
betadgp_covdgp_data_test
fwrite(x = betadgp_covdgp_data_test,
file = here(new_folder, "betadgp_covdgp_data_test.csv"),
row.names = FALSE)
source("~/Documents/Daniel/codes/NN-VAR-Cov-Pred/src/gen_time_series_processes.R")
